
# -- ==============  PYSIDE  QT  	# -- https://www.youtube.com/watch?v=Z1N9JzNax2k


# - --------------- Intro
# - PySide6 /  pyQt : API are similar but pyQt needs to buy a license
# -  cross platform with recompiling
# - QT widgets : mature techno, powerful, supported by Python and C++, for both windows, Linux, Mac  
# - QML -> declarative language,  for mobile devices, but can also run on desktop
# - QT is not only for GUI : also for Network, threading, databases, and tons of others utility


# - --------------- Signal and Slots
# - 


# button
button.setCheckable(True)
button.clicked.connect(button_clicked)

# slider
slider = QSlider(Qt.Horizontal)
slider.setMinimum(1)
slider.setMaximum(100)
slider.setValue(25)

# QLineEdit
# widget 8 > size policies
# ... .setSizePolicy(QSizePolicy.Expanding,QSizePolicy.Fixed)
# ... .setSizePolicy(expansion horizontale ,expansion verticale)

# ------------ QuiLoader
# pour construire dynamiquement la partie GUI depuis un fichier .ui (load method)
# -> pénalisant en terme de perfs à chaque démarrage

# ---------- pyside6-uic
# compilation du fichier .ui ->.py
# pyside6-uic widget.ui > ui_widget.py
# attention aux noms !!! : top level widget in widget.ui is Widget
# widget.ui 		# A file generated by Qt Designer
# ui_widget.py 		# the file after running pyside6-uic
# widget.ui 		# Our own python file with a class inheriting from the generated one


# ---------- ressources file
# pyside6-rcc resource.qrc -o resource_rc.py
# 